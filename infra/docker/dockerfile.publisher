# Build the Go Binary.
FROM golang:1.23.1 as builder
ENV CGO_ENABLED 0
ARG BUILD_REF


# Create the services directory structure insiode container
RUN mkdir -p /service

# Copy go.mod and go.sum files to the build context
COPY go.mod go.sum /service/

#Set the Current Working Directory inside the container
WORKDIR /service

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source code into the container
COPY . /service

# Build the admin binary.
# WORKDIR /service/app/tooling/admin
# RUN go build -ldflags "-X main.build=${BUILD_REF}" -o /service/admin

# Build the service binary.
WORKDIR /service/app/services/publisher-api
RUN go build -ldflags "-X main.build=${BUILD_REF}" -o /service/publisher-api


# Run the Go Binary in Alpine.
FROM alpine:3.19
ARG BUILD_DATE
ARG BUILD_REF

# Create user and group for running the service.
RUN addgroup -g 1000 -S publisher && \
    adduser -u 1000 -h /service -G publisher -S publisher

# Copy built binaries from the builder stage.
#COPY --from=builder --chown=publisher:publisher /service/admin /service/admin
COPY --from=builder --chown=publisher:publisher /service/publisher-api /service/publisher-api

# Set the working directory and user.
WORKDIR /service
USER publisher

# Start the service.
CMD ["./publisher-api"]

# Set metadata labels.
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
    org.opencontainers.image.title="publisher-api" \
    org.opencontainers.image.authors="Vikas KM" \
    org.opencontainers.image.source="https://github.com/vikaskumar1187/publisher_saasv2.git" \
    org.opencontainers.image.revision="${BUILD_REF}" \
    org.opencontainers.image.vendor="Vikas KM"
